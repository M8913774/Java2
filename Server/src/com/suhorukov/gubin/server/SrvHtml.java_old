package com.suhorukov.gubin.server;

import java.net.*;
import java.io.*;

/**
 * Created with IntelliJ IDEA.
 * User:
 * Date: 16.05.13
 * Time: 14:08
 * To change this template use File | Settings | File Templates.
 */
public class SrvHtml {
    public static void main(String[] args) throws IOException {
        while (true) {
            ServerSocket srv = new ServerSocket(4040);
            Socket client = srv.accept();
            System.out.println("Connect: " + client.getInetAddress() + ":" + client.getPort());
            Thread t = new Thread(new Start(client));
            t.start();
        }
    }
}

class Start implements Runnable {
    Socket srv; //Точка установленного соединения
    Start(Socket srv) {
        this.srv = srv;
    }

    public void run() {
        try {
            StringBuilder sb = new StringBuilder();
            InputStream input = srv.getInputStream();
            BufferedReader in = new BufferedReader(new InputStreamReader(input));
            String line = "";
            while (true) {
                line = in.readLine();
                if (line == null) break;
                String cmd[] = line.split(" ");
                HtlmGen htlmGen = new HtlmGen();
                htlmGen.gen(cmd);
            }
            /*int c;
            while ((c = in.read()) != -1 && c != 10 && c != 13) {
               sb.append((char) c);
            }*/
            /*String data = sb.toString();
            String args[] = data.split(" ");
            String cmd = args[0].trim().toUpperCase();*/

        } catch (IOException e) {
            e.printStackTrace();
        }
        /*try {
            InputStream input = srv.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(input));
            OutputStream output = srv.getOutputStream();
            //s.close();
            OutputStreamWriter writer = new OutputStreamWriter(output);
            String line = "";
            while (true) {
                System.out.println("thread: " + Thread.currentThread());
                System.out.println("Waiting for string...");
                line = reader.readLine();
                if (line == null) break;
                System.out.println("Got the string: " + line + " from " + srv.getInetAddress() + " : " + srv.getPort());
                writer.write("answer from:" + srv.getLocalAddress() + ":" + srv.getLocalPort()
                        + " for:" + srv.getInetAddress() + ":" + srv.getPort() + " : " + line + "\n");
                writer.flush();
            }
            writer.close();
            System.out.println("Processor finished.");
        } catch (IOException ex) {
            ex.printStackTrace();
        } */
    }
}